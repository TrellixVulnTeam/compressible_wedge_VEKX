!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module soln_vars ! in 
    interface  ! in :soln_vars
        subroutine init_q(q,p,t,m_in,r,gam,m,n) ! in :soln_vars:C:\Users\Elliot\Documents\Python\compressible_wedge\fortran\soln_vars\soln_vars.f90
            real(kind=8) dimension(m,n,4),intent(inout) :: q
            real(kind=8) intent(in) :: p
            real(kind=8) intent(in) :: t
            real(kind=8) intent(in) :: m_in
            real(kind=8) intent(in) :: r
            real(kind=8) intent(in) :: gam
            integer, optional,intent(in),check(shape(q,0)==m),depend(q) :: m=shape(q,0)
            integer, optional,intent(in),check(shape(q,1)==n),depend(q) :: n=shape(q,1)
        end subroutine init_q
        subroutine calc_covariant(s_proj,u,v,uu,vv,m,n) ! in :soln_vars:C:\Users\Elliot\Documents\Python\compressible_wedge\fortran\soln_vars\soln_vars.f90
            real(kind=8) dimension(m,n,6),intent(in) :: s_proj
            real(kind=8) dimension(m,n),intent(in),depend(m,n) :: u
            real(kind=8) dimension(m,n),intent(in),depend(m,n) :: v
            real(kind=8) dimension(m,n),intent(inout),depend(m,n) :: uu
            real(kind=8) dimension(m,n),intent(inout),depend(m,n) :: vv
            integer, optional,intent(in),check(shape(s_proj,0)==m),depend(s_proj) :: m=shape(s_proj,0)
            integer, optional,intent(in),check(shape(s_proj,1)==n),depend(s_proj) :: n=shape(s_proj,1)
        end subroutine calc_covariant
    end interface 
end python module soln_vars

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
